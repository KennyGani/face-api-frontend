// Custom Theming for Angular Material
// For more information: https://material.angular.io/guide/theming
@use '@angular/material' as mat;
// Plus imports for other components in your app.

// Include the common styles for Angular Material. We include this here so that you only
// have to load a single css file for Angular Material in your app.
// Be sure that you only ever include this mixin once!
@include mat.core();

// Define the palettes for your theme using the Material Design palettes available in palette.scss
// (imported above). For each palette, you can optionally specify a default, lighter, and darker
// hue. Available color palettes: https://material.io/design/color/
$face-recognition-web-app-primary: mat.define-palette(mat.$indigo-palette);
$face-recognition-web-app-accent: mat.define-palette(mat.$pink-palette, A200, A100, A400);

// The warn palette is optional (defaults to red).
$face-recognition-web-app-warn: mat.define-palette(mat.$red-palette);

// Create the theme object. A theme consists of configurations for individual
// theming systems such as "color" or "typography".
$face-recognition-web-app-theme: mat.define-light-theme(
    (
        color: (
            primary: $face-recognition-web-app-primary,
            accent: $face-recognition-web-app-accent,
            warn: $face-recognition-web-app-warn,
        ),
    )
);

// Include theme styles for core and each component used in your app.
// Alternatively, you can import and @include the theme mixins for each component
// that you are using.
@include mat.all-component-themes($face-recognition-web-app-theme);

/* You can add global styles to this file, and also import other style files */

$primary: #fef107;
$accent: #631003;
$warn: #e33022;

$button-border-radius: 13px;
$button-accent: $accent;
$button-text-accent: white;
$button-warn: $warn;
$button-text-warn: white;
$button-primary: $primary;
$button-text-primary: #000000;

html,
body {
    height: 100%;
    margin: 0;
    font-family: Roboto, 'Helvetica Neue', sans-serif;
}

button:disabled,
button[disabled] {
    filter: brightness(0.5);
}

button:not([disabled]):hover {
    filter: brightness(1.1);
    transform: scale(1.05);
}

mat-error {
    font-size: x-small;
}

mat-radio-group label {
    display: contents !important;
    font-size: 21px !important;
}

mat-form-field {
    color: $accent !important;
}

.accent-button {
    background-color: $button-accent;
    color: $button-text-accent;
}

.warn-button {
    background-color: $button-warn;
    color: $button-text-warn;
}

.primary-button {
    background-color: $button-primary;
    color: $button-text-primary;
}

.x-small-button {
    width: 5vw !important;
    height: 3vh !important;
    border-radius: $button-border-radius/2 !important;
}

.small-button {
    width: 8vw !important;
    height: 5vh !important;
    border-radius: $button-border-radius !important;
}

.medium-button {
    width: 13vw !important;
    height: 8vh !important;
    border-radius: $button-border-radius !important;
    margin-left: 2vw !important;
    margin-right: 2vw !important;
}

.large-button {
    width: 21vw !important;
    height: 13vh !important;
    border-radius: $button-border-radius !important;
}

.primary-border-color {
    border-color: $primary !important;
}

.accent-border-color {
    border-color: $accent !important;
}
